# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Auto Archive Version

on:
    # Runs on pushes targeting the default branch
    push:
      tags:
        - 'v*'  # 当推送版本标签时触发
    workflow_dispatch:
      inputs:
        version:
          description: '手动指定版本号'
          required: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: 'pages'
    cancel-in-progress: false

jobs:
    # Build job
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Build with Jekyll
              uses: actions/jekyll-build-pages@v1
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'
            - name: Install dependencies
              run: cd docs && npm i
            - name: Build with VitePress
              run: npm run build:docs
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: docs/.vitepress/dist

    # Archive job
    archive:
      needs: build
      uses: adoin/version-stage-workflow/.github/workflows/version-archive.yml@main
      with:
        build_dir: 'dist'              # 您的构建输出目录
        archive_branch: 'gh-pages'     # 归档分支（可选）
        archive_dir: 'versions'        # 归档目录（可选）
        force_archive: false           # 是否强制覆盖（可选）
        enable_pages: true             # 是否部署到GitHub Pages（可选）
      secrets:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
